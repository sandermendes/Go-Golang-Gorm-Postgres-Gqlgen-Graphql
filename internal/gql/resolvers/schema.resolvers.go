package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"log"

	"github.com/Go-Golang-Gorm-Postgres-Gqlgen-Graphql/main/database"
	"github.com/Go-Golang-Gorm-Postgres-Gqlgen-Graphql/main/internal/gql/generated"
)

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func NewResolver() *Resolver {
	db, err := database.GetConnection()
	if err != nil {
		log.Fatalf("failed to connect to database: %v", err)
	}

	return &Resolver{db: db}
}

type mutationResolver struct {
	*Resolver
	// userService resolvers.mutationResolver
}

// type schemaResolver struct{ *Resolver }

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver {
	return &mutationResolver{r}
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Query() generated.QueryResolver {
	return &queryResolver{r}
}

type queryResolver struct{ *Resolver }
