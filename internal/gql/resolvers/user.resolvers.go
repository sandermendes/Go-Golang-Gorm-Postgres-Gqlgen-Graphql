package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"

	"com.vitanexus/main/internal/gql/generated"
	"com.vitanexus/main/internal/gql/model"
)

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver {
	return &userResolver{r}
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Query() generated.QueryResolver {
	return &queryResolver{r}
}

type userResolver struct{ *Resolver }

// type mutationResolver struct{ *Resolver }

// CreateUser is the resolver for the createUser field.
func (r *userResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createTodo"))
}

// UpdateTodo is the resolver for the updateTodo field.
func (r *userResolver) UpdateUser(ctx context.Context, input model.UpdateUser) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateTodo"))
}

// // UpdateTodo is the resolver for the updateTodo field.
// func (r *mutationResolver) UpdateTodo(ctx context.Context, input model.UpdateTodo) (*model.Todo, error) {
// 	panic(fmt.Errorf("not implemented: UpdateTodo - updateTodo"))
// }

// // Todos is the resolver for the todos field.
// func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
// 	panic(fmt.Errorf("not implemented: Todos - todos"))
// }

// // Query returns generated.QueryResolver implementation.
// func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// type mutationResolver struct{ *Resolver }
// type queryResolver struct{ *Resolver }

// // !!! WARNING !!!
// // The code below was going to be deleted when updating resolvers. It has been copied here so you have
// // one last chance to move it out of harms way if you want. There are two reasons this happens:
// //   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
// //     it when you're done.
// //   - You have helper methods in this file. Move them out to keep these resolver files clean.
// func NewResolver() *Resolver {
// 	db, err := database.GetConnection()
// 	if err != nil {
// 		log.Fatalf("failed to connect to database: %v", err)
// 	}

//		return &Resolver{db: db}
//	}
type queryResolver struct{ *Resolver }

func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	fmt.Println("Listing Users")
	var users []*model.User

	err := r.db.Find(&users).Error
	if err != nil {
		return nil, err
	}

	return users, nil
}

// func (r *queryResolver) Users(ctx context.Context, args struct{ ID string }) (*model.User, error) {
// 	var user model.User
// 	if err := r.db.First(&user, args.ID).Error; err != nil {
// 		return nil, err
// 	}

// 	return &user, nil
// }
